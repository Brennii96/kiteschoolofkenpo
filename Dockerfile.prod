FROM dunglas/frankenphp:latest

# Set the working directory inside the container
WORKDIR /var/www/html

# Install system dependencies required by Laravel and its dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpng-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    locales \
    zip \
    unzip \
    git \
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/freetype2 \
    --with-jpeg-dir=/usr/include \
    --with-png-dir=/usr/include \
    && docker-php-ext-install -j$(($(nproc)-1)) gd pdo pdo_mysql

# Install Composer
COPY --from=composer:latest --mount=type=cache,target=/var/cache/composer global /usr/bin/composer

# Copy application files
COPY . /var/www/html

# Set correct file permissions for Laravel
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html \
    && chmod -R 777 /var/www/html/storage \
    && chmod -R 777 /var/www/html/bootstrap/cache

# Install PHP dependencies
RUN composer install --no-interaction --no-dev --optimize-autoloader

# Generate application key (only if .env doesn't exist.  Important for production!)
RUN if [ ! -f .env ]; then cp .env.example .env; php artisan key:generate --force; fi

# Clear cache
RUN php artisan config:cache
RUN php artisan route:cache
RUN php artisan view:cache

# Expose port 80 for the FrankenPHP server
EXPOSE 80

# Configure FrankenPHP to serve your Laravel application
COPY frankenphp.conf /etc/frankenphp/conf.d/default.conf

# Start FrankenPHP
CMD ["frankenphp", "run"]
